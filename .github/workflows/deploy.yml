name: CI/CD to Render

on:
  push:
    branches: [ "main" ]   # change if your default branch is different
  workflow_dispatch:

permissions:
  contents: read
  packages: write          # needed to push to GHCR
  id-token: write

env:
  BACKEND_IMAGE_NAME: ghcr.io/konstantinosnikas/todo-docker-app-backend
  FRONTEND_IMAGE_NAME: ghcr.io/konstantinosnikas/todo-docker-app-frontend
  TAG_LATEST: latest
  TAG_SHA: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}:${{ env.TAG_LATEST }}
            ${{ env.BACKEND_IMAGE_NAME }}:${{ env.TAG_SHA }}
          cache-from: type=gha,scope=backend
          cache-to: type=gha,mode=max,scope=backend

      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.FRONTEND_IMAGE_NAME }}:${{ env.TAG_LATEST }}
            ${{ env.FRONTEND_IMAGE_NAME }}:${{ env.TAG_SHA }}
          cache-from: type=gha,scope=frontend
          cache-to: type=gha,mode=max,scope=frontend

      # Optional: Quick smoke test by running the backend image (uncomment if useful)
      # - name: Smoke test backend container
      #   run: |
      #     docker run -d -p 4000:4000 --name backend ${{ env.BACKEND_IMAGE_NAME }}:${{ env.TAG_LATEST }}
      #     sleep 5
      #     docker logs backend
      #     docker stop backend

      - name: Trigger Render Deploy
        run: |
          curl -fsSL -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
